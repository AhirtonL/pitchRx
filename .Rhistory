scores$exam1 <- as.numeric(as.character(scores$Exam_1_Percent))
str(scores)
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores", stat = "bin", position = "stack")
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores")
+ geom_vline(xintercept = mean(exam1))
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores")
+ geom_vline(xintercept = mean(exam1))
+ geom_vline(xintercept = mean(scores$exam1))
mean(scores$exam1)
mu <- mean(scores$exam1)
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores")
+ geom_vline(xintercept = mu)
+ geom_vline(xintercept = 82)
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = 82)
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = mu)
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = mu, labels = "mu")
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score",
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = mu, labels = "mu")
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = mu, color = "red")
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score",
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + geom_vline(xintercept = mu, color = "red")
l <- geom_vline(xintercept = mean(scores$exam1), color = "red")
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score",
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores") + l
qplot(exam1, data = scores, geom = "boxplot", fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score",
ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores")
p <- ggplot(data = class.list, aes(Sex, Willing))
ggplot(data = scores, aes(exam1)) + geom_boxplot()
ggplot(data = scores, aes(exam1)) + geom_boxplot(position= "identity")
ggplot(data = scores, aes(exam1)) + geom_boxplot(position= "identity", stat = "identity")
ggplot(data = scores, aes(y = exam1)) + geom_boxplot(position= "identity", stat = "identity")
names(scores)
scores$test <- factor(1)
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot(position= "identity", stat = "identity")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot()
summary(scores$exam1)
h <- geom_hline(yintercept = mean(scores$exam1), color = "red")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + h
annotate("text", label = "Max", x = 1, y = 100, size = 8, colour = "red")
a <- annotate("text", label = "Max", x = 1, y = 100, size = 8, colour = "red")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + h + a
a <- annotate("text", label = "Max", x = 2, y = 100, size = 8, colour = "red")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + h + a
a <- annotate("text", label = "Max", x = 1.5, y = 100, size = 8, colour = "red")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + h + a
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + h + a + coord_flip()
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab() + h + a + coord_flip()
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip()
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip() + main("Histogram of Stat 226 Section E Exam 1 Scores")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip() + title("Histogram of Stat 226 Section E Exam 1 Scores")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip() + theme(title = "Histogram of Stat 226 Section E Exam 1 Scores")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip() + element_text(title = "Histogram of Stat 226 Section E Exam 1 Scores")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + a + coord_flip() + labs(title = "Histogram of Stat 226 Section E Exam 1 Scores")
ggplot(data = scores, aes(y = exam1, test)) + geom_boxplot() + xlab("") + h + coord_flip() + labs(title = "Histogram of Stat 226 Section E Exam 1 Scores")
setwd("~/Dropbox/ISU/Teaching/Exam 1/")
scores <- read.csv("scores.csv", header=T)
scores <- scores[scores$Exam_1_Percent != "#VALUE!",]
scores$exam1 <- as.numeric(as.character(scores$Exam_1_Percent))
scores$exam1
sample(scores$exam1, 5)
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
qplot(exam1, data = scores, geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlab = "Exam 1 Score", ylab = "# of students", main = "Histogram of Stat 226 Section E Exam 1 Scores", stat = "bin", position = "stack")
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
mean(sample(scores$exam1, 5))
rep(mean(sample(scores$exam1, 5)), 3)
vapply(scores$exam1, function(x) { sample(x, 5) })
?vapply
vapply(scores$exam1, function(x) { sample(x, 5) })
vapply(scores$exam1, FUN = x)
vapply(scores$exam1, FUN = mean)
vapply(scores$exam1, mean)
scores$exam1 <- asl.list(as.numeric(as.character(scores$Exam_1_Percent)))
scores$exam1 <- as.list(as.numeric(as.character(scores$Exam_1_Percent)))
scores$exam1
data <- as.list(as.numeric(as.character(scores$Exam_1_Percent)))
sample(data, 5)
mean(sample(data, 5))
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 1
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
return(bars)
}
sampling(n = 5, rep = 20, x = data)
data <- as.numeric(as.character(scores$Exam_1_Percent))
sampling(n = 5, rep = 20, x = data)
as.data.frame(means)
means <- sampling(n = 5, rep = 20, x = data)
as.data.frame(means)
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'))
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), ylim=c(0,100))
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
return(bars)
}
means <- sampling(n = 5, rep = 20, x = data)
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
print(bars, "\n")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
print(bars, "/n")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
browser()
print(bars, "/n")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling(n = 5, rep = 20, x = data)
n
bars
cat(bars)
Q
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(bars, "/n")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling(n = 5, rep = 25, x = data)
sampling(n = 30, rep = 25, x = data)
sampling(n = 30, rep = 100, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(bars)
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling(n = 30, rep = 100, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100))
}
sampling(n = 30, rep = 100, x = data)
sampling(n = 30, rep = 100, x = data)
sampling(n = 5, rep = 20, x = data)
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + h
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
h <- geom_hline(yintercept = mean(data), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + h
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
browser()
h <- geom_hline(yintercept = mean(data), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + h
}
sampling(n = 5, rep = 20, x = data)
n
n
n
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
h <- geom_hline(yintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + h
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
h <- geom_vline(xintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + h
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + v
}
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
browser()
v <- geom_vline(xintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100), xlab("sample means")) + v
}
sampling(n = 5, rep = 20, x = data)
n
mean(x)
n
n
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
browser()
v <- geom_vline(xintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(0,100)) + v
}
sampling(n = 5, rep = 20, x = data)
n
n
n
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
browser()
v <- geom_vline(xintercept = mean(x), color = "red")
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v
}
sampling(n = 5, rep = 20, x = data)
n
n
n
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
browser()
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v
}
sampling(n = 5, rep = 20
Q
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v = title
}
sampling(n = 5, rep = 20, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 10, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 20, x = data)
sampling(n = 5, rep = 1000, x = data)
sampling(n = 5, rep = 10000, x = data)
sampling(n = 5, rep = 100, x = data)
sampling(n = 10, rep = 100, x = data)
sampling(n = 20, rep = 100, x = data)
sampling(n = 30, rep = 100, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 5, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 100, x = data)
sampling(n = 10, rep = 100, x = data)
sampling(n = 20, rep = 100, x = data)
sampling(n = 30, rep = 100, x = data)
sampling <- function(n, reps, x){
bars <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
bars <- c(bars, mean(y))
ctr <- ctr + 1
}
cat(round(bars, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Distribution of Exam Score Sample Means when n = ", n, sep=""))
qplot(bars, data = as.data.frame(bars), geom = "histogram", binwidth = 1, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 100, x = data)
sampling(n = 10, rep = 100, x = data)
sampling(n = 20, rep = 100, x = data)
sampling(n = 30, rep = 100, x = data)
sampling(n = 5, rep = 1000, x = data)
sampling(n = 10, rep = 1000, x = data)
sampling(n = 20, rep = 1000, x = data)
sampling(n = 30, rep = 1000, x = data)
sampling <- function(n, reps, x){
means <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
means <- c(means, mean(y))
ctr <- ctr + 1
}
cat(round(means, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Sampling Distribution of Exam Scores when n = ", n, sep=""))
xlab <- labs(x = "Mean Exam Score")
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 1, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 1000, x = data)
sampling(n = 10, rep = 1000, x = data)
sampling(n = 20, rep = 1000, x = data)
sampling <- function(n, reps, x){
means <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
means <- c(means, mean(y))
ctr <- ctr + 1
}
#cat(round(means, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Sampling Distribution of Exam Scores when n = ", n, sep=""))
xlab <- labs(x = "Mean Exam Score")
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 1, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 1000, x = data)
sampling <- function(n, reps, x){
means <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
means <- c(means, mean(y))
ctr <- ctr + 1
}
#cat(round(means, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Sampling Distribution of Exam Scores when n = ", n, sep=""))
xlab <- labs(x = "Mean Exam Score")
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 0.5, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 10000, x = data)
sampling(n = 10, rep = 10000, x = data)
sampling(n = 20, rep = 10000, x = data)
sampling(n = 30, rep = 10000, x = data)
sampling <- function(n, reps, x){
means <- NULL
ctr <- 0
while (ctr < reps) {
y <- sample(x, n)
means <- c(means, mean(y))
ctr <- ctr + 1
}
#cat(round(means, 1))
v <- geom_vline(xintercept = mean(x), color = "red")
title <- labs(title = paste("Sampling Distribution of Exam Scores when n = ", n, sep=""))
xlab <- labs(x = "Mean Exam Score")
qplot(means, data = as.data.frame(means), geom = "histogram", binwidth = 1, fill=I('steelblue'), col=I('black'), xlim=c(min(data),100)) + v + title
}
sampling(n = 5, rep = 10000, x = data)
sampling(n = 5, rep = 10000, x = data)
sampling(n = 10, rep = 10000, x = data)
sampling(n = 20, rep = 10000, x = data)
sampling(n = 30, rep = 10000, x = data)
sampling(n = 5, rep = 1000, x = data)
sampling(n = 5, rep = 5000, x = data)
sampling(n = 10, rep = 5000, x = data)
sampling(n = 20, rep = 5000, x = data)
sampling(n = 30, rep = 5000, x = data)
setwd("~/Desktop/github/local/pitchRx")
document(".")
library(devtools)
document(".")
install(".") #install the package
install_github('pitchRx', 'cpsievert')
library(pitchRx)
?scrapeFX
